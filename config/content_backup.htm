<h1>關於</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網頁：請填寫目前網站所在網址，<a href="https://41023155.github.io/cd2024/content/index.html">https://41023155.github.io/cd2024/content/index.html</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網誌：請填寫目前網站所在的URL/blog，<a href="https://41023155.github.io/cd2024/blog/index.html">https://41023155.github.io/cd2024/blog/index.html</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">簡報: 請填寫目前網站所在的 URL/reveal, <a href="https://41023155.github.io/cd2024/content/index.html">https://41023155.github.io/cd2024/content/index.html</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">對應以太坊：請填寫目前網站所的Github連結以太坊<a href="https://github.com/41023155/cd2024">https://github.com/41023155/cd2024</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">團隊的github <a href="https://github.com/mdecd2024/2a-midag8">https://github.com/mdecd2024/2a-midag8</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">本cmsimde網際內容管理系統的範本應答：</span></span></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecycu/cmsimde_site</span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">此範本將cmsimde作為子目錄硬體子模組，使用者可依需求自行修改</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">對應以太坊網址：</span></span><a href="https://mde.tw/cmsimde_site"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https ://mde.tw/cmsimde_site</span></span></a></p>
<h1>Homework</h1>
<h2>w1</h2>
<h2>w2</h2>
<div>
<div><span style="background-color: #ff99cc;"><em><strong># 甲班第一組組長如何建立 midag1 Team</strong></em></span></div>
<div><span style="background-color: #ff99cc;"><em><strong></strong></em></span></div>
<div><span>在這部影片我學到了如何用Codespaces維護2a-midag8分組倉儲 操作歸納如下</span></div>
<div><span>用 Codespaces 開啟動態網頁</span></div>
<div><span>執行以下命令使 init_replit 檔案具有執行權限：</span></div>
<div><span>chmod u+x init_replit</span></div>
<div><span>執行 init_replit 檔案：</span></div>
<div><span>./init_replit</span></div>
<div><span>執行 main.py 檔案：</span></div>
<div><span>python3 main.py</span></div>
<div><span>用 Codespaces 開啟靜態網頁</span></div>
<div><span>執行以下命令啟動 Python 內建的簡易伺服器：</span></div>
<div><span>python3 -m http.server</span></div>
<div><span>如何進行改版</span></div>
<div><span>使用 git status 命令查看目前的修改狀態。</span></div>
<div><span>使用 git add . 命令將所有修改的檔案添加到暫存區。</span></div>
<div><span>使用 git commit -m "新增的的內容" 命令提交修改，並填入適合的提交訊息。</span></div>
<div><span>使用 git push 將本地的提交推送到遠端倉儲。</span></div>
<div><span></span></div>
<div>
<div>
<div><span style="background-color: #ff99cc;"><strong><em># 如何利用近端可攜系統維護分組網站</em></strong></span></div>
<div><span style="background-color: #ff99cc;"><strong><em></em></strong></span></div>
<div><span>在這部影片我學到了如何用近端可攜系統維護分組網站 操作歸納如下</span></div>
<div><span>1.SSH 金鑰： 使用 Puttygen 建立一把 SSH 金鑰並將其存儲為 .ppk 格式的檔案。</span></div>
<div><span>2.SSH 金鑰導入 Putty： 使用 Putty 將 SSH 金鑰導入，以便在遠端伺服器上進行身份驗證。</span></div>
<div><span>3.PuTTY 會話設定： 在 Regedit 中找到 HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\github.com 鍵，將其匯出為 .reg 檔案，這將保存你的 PuTTY 會話設定。</span></div>
<div><span>4.本地端進行改版：</span></div>
<div><span>切換到暫存目錄：</span></div>
<div><span>cd tmp</span></div>
<div><span>克隆倉庫：</span></div>
<div><span>git clone --recurse-submodules git@github.com:mdecd2024/2a-midag1.git</span></div>
<div><span>進入克隆的倉庫目錄：</span></div>
<div><span>cd 2a-midag1</span></div>
<div><span>進行修改和提交：</span></div>
<div><span>#進行修改...</span></div>
<div><span>git add .</span></div>
<div><span>git commit -m "自己要推的東西"</span></div>
<div><span>推送到遠端倉庫：</span></div>
<div><span>git push</span></div>
<div><span>5.其他使用者推送：</span></div>
<div><span>獲取你的 IPv4 地址：</span></div>
<div><span>ipconfig</span></div>
<div><span>在組別下的 Python 腳本中導入你的 IPv4 環境。</span></div>
<div><span>允許組別中的其他成員更新和推送修改。</span></div>
<div><span></span></div>
<div>
<div>
<div><em><strong><span style="background-color: #ff99cc;"># 如何利用近端可攜系統維護分組網站w2-1 說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲</span></strong></em></div>
<div><em><strong><span style="background-color: #ff99cc;"></span></strong></em></div>
<div><span>用github classroom建立組別倉儲，組長在or create a new team處以midag X 來稱謂組別名稱並+create team創立。在組別創立後，組員各自去join進入組別內。倉儲完全建立好後去到倉儲的settings並選取pages就可進入主分支。啟動完github pages就可以做code，並使用codespaces來維護內容。在codespaces中有許多終端機許多埠號資源可使用，不需要再公用443。啟動終端機要先安裝模組。使用者+執行+檔案位置=chmod u+x init_replit執行，執行安裝好後會直接給予2記憶體容量。但沒有run了，所以要在自己設定python3 main.py執行動態，利用8080幫我們開啟瀏覽器。連結埠號會呈現亂碼，所以別人無法進入。login進入動態後就可更改內容。終端機每個人每月都有120code小時。要push倉儲要新增終端機後，進行git add-&gt;git commit"網頁標題"，執行後就會直接推上不需要在轉檔。啟動靜態要在新增終端機，有python3內建模組了就可以直接http.server直接啟動埠號，8000會自動開啟瀏覽器連結，就可以直接進入到靜態。用完codespaces要在關閉code讓計時暫停。</span></div>
</div>
</div>
</div>
</div>
</div>
<div></div>
<h2>w3</h2>
<div>
<div>
<div>
<div>
<div><strong><em><span style="background-color: #ff99cc;"># 將英文文章翻譯成中文並整理</span></em></strong></div>
<div><strong><em><span style="background-color: #ff99cc;"></span></em></strong></div>
<div>
<div><span>負責翻譯23~44頁 因為本組只有4位 因此更加努力的負責自己part</span></div>
<div><span>https://github.com/41023155/cd2024/blob/main/downloads/section%7B%E5%A4%A7%E6%A8%99%7D.txt</span></div>
<div><span>因為不熟悉自行丟入到自己的個人倉儲 因此花費時間比較久 稍微延到了進度 還請老師體諒</span></div>
<div><span>慢慢了解此文章是在說什麼內容 達到老師希望我們做到的事</span></div>
<div><span></span></div>
<div><strong><em><span style="background-color: #ff99cc;"># 如何將個人倉儲設為 2a-midag2 分組倉儲的子模組</span></em></strong>
<div><strong><em><span style="background-color: #ff99cc;"></span></em></strong></div>
<div>
<div><span>在replit來維護的話，有一些特定的方法，Repri是綁到你給他的賬號下。假如現在在近端做，就必須把它克隆下來然後再進行操作然後再推回去。利用SSH ，先確認在靜端是否有權限，權限是在登錄cadlab檔上的putty.reg，此部分是利用putty做的，在近端部分沒有時間限制，在目前系統上putty是沒有任何setings。但現在要用ssh刻隆下它，就必須要權限。在找到實體權限後雙擊就可寫入進去，在察看putty有出現對應的key與setings，都有就可用setings進行刻隆，並且改版可以push回去。載入之後有setings名稱，並確認是否有設proxy，因為沒有設ipv所以沒有proxy，所以之前設定部分要修改成none，並確認key是否有更改。key要設到外部才可攜。 確認可以連線後，就可以把key as push出來，key就會在主態登錄檔regedit中，在current_root下的software可找到設定的setings，並且裡面就有對應的key。 有權限後就可刻隆。刻隆在c槽比較快速，切換槽c並在槽中用mkdir建一個tmp，並用git clone --子模組recurse+ssh+對應帳號 刻隆下。 執行成功就可以讓倉儲設為子模組，先進入倉儲對應目錄把整個資料抓下，並git add。(分組倉儲底下)組倉儲名稱+git+子模組submodule+add(表示用git建立子模組)+個人課程倉儲+目錄，用https去抓子模組在分組倉儲是沒有權限的。 可以把組員的倉儲抓下來。在個人更新時可以分段抓取，未處理完的章節可以不引進。在git push後不只建了目錄還會動gitmodules檔案，待第二個人還沒建子模組前就刻隆下來，將個人倉儲加為子模組之後，就要處理.gitmodules的衝突。</span></div>
<div><span></span></div>
<div><strong><span style="background-color: #ff99cc;"><em># 將組員的個人倉儲設為分組倉儲子模組</em></span></strong></div>
<div><strong><span style="background-color: #ff99cc;"><em></em></span></strong><br/>
<div>
<div><span>已建立組別倉儲，利用倉儲對應的codespaces下git submodule add。確認git status分支是否跟主分支是同步的，在用ls-l秀出內容後clear下來。接著用git submodule add+倉儲網址+git+學號，指令意思是必須在分組倉儲目錄新增一個子模組，其中子模組要的資料在複製的網址中取得，並打上目錄名稱。成功 克隆後add在commit推上去，推上後回到倉儲確認有子模組資料加入。其中子模組是有版本的，意思是可以開發跟推出同步進行，版本可自行決定公布。</span></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<h2>w4</h2>
<p>翻譯文章英翻中 四人一人翻譯22頁</p>
<p><a href="/downloads/section{大標}.txt">文字檔</a></p>
<h2>w5</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3eINkT8euc4?si=TJapBr78QKL6ROXs" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/41023155/cd2024/blob/main/downloads/11.58.txt" title="cd2024_2b_7_w2 利用 codespaces 維護分組網站">https://github.com/41023155/cd2024/blob/main/downloads/11.58.txt</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/UQAJtNkploA?si=d5av5fi-CURSAXkb" title="YouTube video player" width="560"></iframe></p>
<p><span><a href="https://github.com/41023155/cd2024/blob/main/downloads/14.18.txt" title="cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站">https://github.com/41023155/cd2024/blob/main/downloads/14.18.txt</a><br/></span></p>
<p><span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jcXKOmJ4uk0?si=UXsSSZ16ESUw2fzZ" title="YouTube video player" width="560"></iframe></span></p>
<p><span><a href="https://github.com/41023155/cd2024/blob/main/downloads/13.24.txt" title="cd2024_2a_w2_3_如何建立各組的 Team midag1 並利用 Codespaces 維護內容">https://github.com/41023155/cd2024/blob/main/downloads/13.24.txt</a></span></p>
<p><span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ddvwsYU_g_o?si=F9wUChnD11PcMZTD" title="YouTube video player" width="560"></iframe></span><span></span></p>
<p><span><a href="https://github.com/41023155/cd2024/blob/main/downloads/25.txt" title="cd2024_2a_w2_4_利用 Replit 管理 Github Classroom 分組倉儲">https://github.com/41023155/cd2024/blob/main/downloads/25.txt</a></span></p>
<h2>w6</h2>
<h2>w7</h2>
<p>兒童節+清明節放假</p>
<h2>w8</h2>
<p>期中自評70</p>
<h2>w9</h2>
<p>鋼球平衡台 PID 控制與模擬</p>
<p>對 Gemini 1.5 Pro 提問:</p>
<p>以下為利用 PID 控制 CoppeliaSim<span> </span><a href="http://229.cycu.org/ball_beam_balancing_PID_control_coppeliasim_1d_and_2d.7z">鋼球平衡台場景</a>的 ZMQ RemoteAPI Python 程式, 請利用Python模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. "這裡附上原本的PID控制程式碼"</p>
<p><span>Gemini 1.5 Pro</span>回答:</p>
<div _ngcontent-ng-c3669143999="" class="code-block-decoration header gmat-subtitle-1 ng-star-inserted"><span _ngcontent-ng-c3669143999="">Python</span></div>
<div _ngcontent-ng-c3669143999="" class="code-block-internal-container">
<div>
<div class="syntaxhighlighter py" id="highlighter_717671">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
<div class="line number98 index97 alt1">98</div>
<div class="line number99 index98 alt2">99</div>
<div class="line number100 index99 alt1">100</div>
<div class="line number101 index100 alt2">101</div>
<div class="line number102 index101 alt1">102</div>
<div class="line number103 index102 alt2">103</div>
<div class="line number104 index103 alt1">104</div>
<div class="line number105 index104 alt2">105</div>
<div class="line number106 index105 alt1">106</div>
<div class="line number107 index106 alt2">107</div>
<div class="line number108 index107 alt1">108</div>
<div class="line number109 index108 alt2">109</div>
<div class="line number110 index109 alt1">110</div>
<div class="line number111 index110 alt2">111</div>
<div class="line number112 index111 alt1">112</div>
<div class="line number113 index112 alt2">113</div>
<div class="line number114 index113 alt1">114</div>
<div class="line number115 index114 alt2">115</div>
<div class="line number116 index115 alt1">116</div>
<div class="line number117 index116 alt2">117</div>
<div class="line number118 index117 alt1">118</div>
<div class="line number119 index118 alt2">119</div>
<div class="line number120 index119 alt1">120</div>
<div class="line number121 index120 alt2">121</div>
<div class="line number122 index121 alt1">122</div>
<div class="line number123 index122 alt2">123</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">zmq</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">import</code> <code class="py plain">time</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">matplotlib.pyplot as plt</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">numpy as np</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py comments"># ZMQ 連接設定</code></div>
<div class="line number7 index6 alt2"><code class="py plain">context </code><code class="py keyword">=</code> <code class="py plain">zmq.Context()</code></div>
<div class="line number8 index7 alt1"><code class="py plain">socket </code><code class="py keyword">=</code> <code class="py plain">context.socket(zmq.REQ)</code></div>
<div class="line number9 index8 alt2"><code class="py plain">socket.connect(</code><code class="py string">"tcp://127.0.0.1:5555"</code><code class="py plain">)</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py comments"># PID 控制參數</code></div>
<div class="line number12 index11 alt1"><code class="py plain">Kp </code><code class="py keyword">=</code> <code class="py value">0.5</code></div>
<div class="line number13 index12 alt2"><code class="py plain">Ki </code><code class="py keyword">=</code> <code class="py value">0.1</code></div>
<div class="line number14 index13 alt1"><code class="py plain">Kd </code><code class="py keyword">=</code> <code class="py value">0.01</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="py comments"># 參考資料</code></div>
<div class="line number17 index16 alt2"><code class="py plain">reference_x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number18 index17 alt1"><code class="py plain">reference_y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="py comments"># 實際狀態</code></div>
<div class="line number21 index20 alt2"><code class="py plain">x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number22 index21 alt1"><code class="py plain">y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="py comments"># 誤差</code></div>
<div class="line number25 index24 alt2"><code class="py plain">error_x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number26 index25 alt1"><code class="py plain">error_y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number27 index26 alt2"> </div>
<div class="line number28 index27 alt1"><code class="py comments"># 累積誤差</code></div>
<div class="line number29 index28 alt2"><code class="py plain">integral_error_x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number30 index29 alt1"><code class="py plain">integral_error_y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="py comments"># 導數誤差</code></div>
<div class="line number33 index32 alt2"><code class="py plain">derivative_error_x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number34 index33 alt1"><code class="py plain">derivative_error_y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="py comments"># 控制訊號</code></div>
<div class="line number37 index36 alt2"><code class="py plain">control_signal_x </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number38 index37 alt1"><code class="py plain">control_signal_y </code><code class="py keyword">=</code> <code class="py value">0.0</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="py comments"># 時間軸</code></div>
<div class="line number41 index40 alt2"><code class="py plain">time_axis </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number42 index41 alt1"> </div>
<div class="line number43 index42 alt2"><code class="py comments"># x 方向座標</code></div>
<div class="line number44 index43 alt1"><code class="py plain">x_axis </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number45 index44 alt2"> </div>
<div class="line number46 index45 alt1"><code class="py comments"># y 方向座標</code></div>
<div class="line number47 index46 alt2"><code class="py plain">y_axis </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="py comments"># 模擬時間</code></div>
<div class="line number50 index49 alt1"><code class="py plain">simulation_time </code><code class="py keyword">=</code> <code class="py value">10.0</code></div>
<div class="line number51 index50 alt2"> </div>
<div class="line number52 index51 alt1"><code class="py comments"># 模擬步長</code></div>
<div class="line number53 index52 alt2"><code class="py plain">simulation_step </code><code class="py keyword">=</code> <code class="py value">0.01</code></div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"><code class="py comments"># 開始模擬</code></div>
<div class="line number56 index55 alt1"><code class="py plain">start_time </code><code class="py keyword">=</code> <code class="py plain">time.time()</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="py keyword">while</code> <code class="py plain">time.time() &lt; start_time </code><code class="py keyword">+</code> <code class="py plain">simulation_time:</code></div>
<div class="line number59 index58 alt2"><code class="py spaces"> </code><code class="py comments"># 讀取實際狀態</code></div>
<div class="line number60 index59 alt1"><code class="py spaces"> </code><code class="py plain">request </code><code class="py keyword">=</code> <code class="py string">"get state"</code></div>
<div class="line number61 index60 alt2"><code class="py spaces"> </code><code class="py plain">socket.send_string(request)</code></div>
<div class="line number62 index61 alt1"><code class="py spaces"> </code><code class="py plain">response </code><code class="py keyword">=</code> <code class="py plain">socket.recv_string()</code></div>
<div class="line number63 index62 alt2"><code class="py spaces"> </code><code class="py plain">state </code><code class="py keyword">=</code> <code class="py functions">eval</code><code class="py plain">(response)</code></div>
<div class="line number64 index63 alt1"><code class="py spaces"> </code><code class="py plain">x </code><code class="py keyword">=</code> <code class="py plain">state[</code><code class="py string">"x"</code><code class="py plain">]</code></div>
<div class="line number65 index64 alt2"><code class="py spaces"> </code><code class="py plain">y </code><code class="py keyword">=</code> <code class="py plain">state[</code><code class="py string">"y"</code><code class="py plain">]</code></div>
<div class="line number66 index65 alt1"><code class="py spaces"> </code> </div>
<div class="line number67 index66 alt2"><code class="py spaces"> </code><code class="py comments"># 計算誤差</code></div>
<div class="line number68 index67 alt1"><code class="py spaces"> </code><code class="py plain">error_x </code><code class="py keyword">=</code> <code class="py plain">reference_x </code><code class="py keyword">-</code> <code class="py plain">x</code></div>
<div class="line number69 index68 alt2"><code class="py spaces"> </code><code class="py plain">error_y </code><code class="py keyword">=</code> <code class="py plain">reference_y </code><code class="py keyword">-</code> <code class="py plain">y</code></div>
<div class="line number70 index69 alt1"> </div>
<div class="line number71 index70 alt2"><code class="py spaces"> </code><code class="py comments"># 累積誤差</code></div>
<div class="line number72 index71 alt1"><code class="py spaces"> </code><code class="py plain">integral_error_x </code><code class="py keyword">+</code><code class="py keyword">=</code> <code class="py plain">error_x </code><code class="py keyword">*</code> <code class="py plain">simulation_step</code></div>
<div class="line number73 index72 alt2"><code class="py spaces"> </code><code class="py plain">integral_error_y </code><code class="py keyword">+</code><code class="py keyword">=</code> <code class="py plain">error_y </code><code class="py keyword">*</code> <code class="py plain">simulation_step</code></div>
<div class="line number74 index73 alt1"> </div>
<div class="line number75 index74 alt2"><code class="py spaces"> </code><code class="py comments"># 導數誤差</code></div>
<div class="line number76 index75 alt1"><code class="py spaces"> </code><code class="py plain">derivative_error_x </code><code class="py keyword">=</code> <code class="py plain">(x </code><code class="py keyword">-</code> <code class="py plain">previous_x) </code><code class="py keyword">/</code> <code class="py plain">simulation_step</code></div>
<div class="line number77 index76 alt2"><code class="py spaces"> </code><code class="py plain">derivative_error_y </code><code class="py keyword">=</code> <code class="py plain">(y </code><code class="py keyword">-</code> <code class="py plain">previous_y) </code><code class="py keyword">/</code> <code class="py plain">simulation_step</code></div>
<div class="line number78 index77 alt1"> </div>
<div class="line number79 index78 alt2"><code class="py spaces"> </code><code class="py comments"># 更新控制訊號</code></div>
<div class="line number80 index79 alt1"><code class="py spaces"> </code><code class="py plain">control_signal_x </code><code class="py keyword">=</code> <code class="py plain">Kp </code><code class="py keyword">*</code> <code class="py plain">error_x </code><code class="py keyword">+</code> <code class="py plain">Ki </code><code class="py keyword">*</code> <code class="py plain">integral_error_x </code><code class="py keyword">+</code> <code class="py plain">Kd </code><code class="py keyword">*</code> <code class="py plain">derivative_error_x</code></div>
<div class="line number81 index80 alt2"><code class="py spaces"> </code><code class="py plain">control_signal_y </code><code class="py keyword">=</code> <code class="py plain">Kp </code><code class="py keyword">*</code> <code class="py plain">error_y </code><code class="py keyword">+</code> <code class="py plain">Ki </code><code class="py keyword">*</code> <code class="py plain">integral_error_y </code><code class="py keyword">+</code> <code class="py plain">Kd </code><code class="py keyword">*</code> <code class="py plain">derivative_error_y</code></div>
<div class="line number82 index81 alt1"> </div>
<div class="line number83 index82 alt2"><code class="py spaces"> </code><code class="py comments"># 限制控制訊號</code></div>
<div class="line number84 index83 alt1"><code class="py spaces"> </code><code class="py plain">control_signal_x </code><code class="py keyword">=</code> <code class="py functions">max</code><code class="py plain">(</code><code class="py keyword">-</code><code class="py value">10.0</code><code class="py plain">, </code><code class="py functions">min</code><code class="py plain">(</code><code class="py value">10.0</code><code class="py plain">, control_signal_x))</code></div>
<div class="line number85 index84 alt2"><code class="py spaces"> </code><code class="py plain">control_signal_y </code><code class="py keyword">=</code> <code class="py functions">max</code><code class="py plain">(</code><code class="py keyword">-</code><code class="py value">10.0</code><code class="py plain">, </code><code class="py functions">min</code><code class="py plain">(</code><code class="py value">10.0</code><code class="py plain">, control_signal_y))</code></div>
<div class="line number86 index85 alt1"> </div>
<div class="line number87 index86 alt2"><code class="py spaces"> </code><code class="py comments"># 送出控制訊號</code></div>
<div class="line number88 index87 alt1"><code class="py spaces"> </code><code class="py plain">request </code><code class="py keyword">=</code> <code class="py string">"set force"</code></div>
<div class="line number89 index88 alt2"><code class="py spaces"> </code><code class="py plain">data </code><code class="py keyword">=</code> <code class="py plain">{</code><code class="py string">"force_x"</code><code class="py plain">: control_signal_x, </code><code class="py string">"force_y"</code><code class="py plain">: control_signal_y}</code></div>
<div class="line number90 index89 alt1"><code class="py spaces"> </code><code class="py plain">socket.send_string(request)</code></div>
<div class="line number91 index90 alt2"><code class="py spaces"> </code><code class="py plain">socket.send_string(</code><code class="py functions">str</code><code class="py plain">(data))</code></div>
<div class="line number92 index91 alt1"> </div>
<div class="line number93 index92 alt2"><code class="py spaces"> </code><code class="py comments"># 記錄數據</code></div>
<div class="line number94 index93 alt1"><code class="py spaces"> </code><code class="py plain">time_axis.append(time.time() </code><code class="py keyword">-</code> <code class="py plain">start_time)</code></div>
<div class="line number95 index94 alt2"><code class="py spaces"> </code><code class="py plain">x_axis.append(x)</code></div>
<div class="line number96 index95 alt1"><code class="py spaces"> </code><code class="py plain">y_axis.append(y)</code></div>
<div class="line number97 index96 alt2"> </div>
<div class="line number98 index97 alt1"><code class="py spaces"> </code><code class="py comments"># 更新狀態</code></div>
<div class="line number99 index98 alt2"><code class="py spaces"> </code><code class="py plain">previous_x </code><code class="py keyword">=</code> <code class="py plain">x</code></div>
<div class="line number100 index99 alt1"><code class="py spaces"> </code><code class="py plain">previous_y </code><code class="py keyword">=</code> <code class="py plain">y</code></div>
<div class="line number101 index100 alt2"> </div>
<div class="line number102 index101 alt1"><code class="py spaces"> </code><code class="py comments"># 延遲模擬步長</code></div>
<div class="line number103 index102 alt2"><code class="py spaces"> </code><code class="py plain">time.sleep(simulation_step)</code></div>
<div class="line number104 index103 alt1"> </div>
<div class="line number105 index104 alt2"><code class="py comments"># 關閉 ZMQ 連接</code></div>
<div class="line number106 index105 alt1"><code class="py plain">socket.close()</code></div>
<div class="line number107 index106 alt2"> </div>
<div class="line number108 index107 alt1"><code class="py comments"># 繪製圖表</code></div>
<div class="line number109 index108 alt2"><code class="py plain">plt.figure(figsize</code><code class="py keyword">=</code><code class="py plain">(</code><code class="py value">10</code><code class="py plain">, </code><code class="py value">6</code><code class="py plain">))</code></div>
<div class="line number110 index109 alt1"><code class="py plain">plt.subplot(</code><code class="py value">2</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number111 index110 alt2"><code class="py plain">plt.plot(time_axis, x_axis, label</code><code class="py keyword">=</code><code class="py string">"x"</code><code class="py plain">)</code></div>
<div class="line number112 index111 alt1"><code class="py plain">plt.plot(time_axis, reference_x </code><code class="py keyword">*</code> <code class="py plain">np.ones_like(time_axis), label</code><code class="py keyword">=</code><code class="py string">"reference_x"</code><code class="py plain">)</code></div>
<div class="line number113 index112 alt2"><code class="py plain">plt.xlabel(</code><code class="py string">"Time (s)"</code><code class="py plain">)</code></div>
<div class="line number114 index113 alt1"><code class="py plain">plt.ylabel(</code><code class="py string">"Position (m)"</code><code class="py plain">)</code></div>
<div class="line number115 index114 alt2"><code class="py plain">plt.legend()</code></div>
<div class="line number116 index115 alt1"><code class="py plain">plt.subplot(</code><code class="py value">2</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">, </code><code class="py value">2</code><code class="py plain">)</code></div>
<div class="line number117 index116 alt2"><code class="py plain">plt.plot(time_axis, y_axis, label</code><code class="py keyword">=</code><code class="py string">"y"</code><code class="py plain">)</code></div>
<div class="line number118 index117 alt1"><code class="py plain">plt.plot(time_axis, reference_y </code><code class="py keyword">*</code> <code class="py plain">np.ones_like(time_axis), label</code><code class="py keyword">=</code><code class="py string">"reference_y"</code><code class="py plain">)</code></div>
<div class="line number119 index118 alt2"><code class="py plain">plt.xlabel(</code><code class="py string">"Time (s)"</code><code class="py plain">)</code></div>
<div class="line number120 index119 alt1"><code class="py plain">plt.ylabel(</code><code class="py string">"Position (m)"</code><code class="py plain">)</code></div>
<div class="line number121 index120 alt2"><code class="py plain">plt.legend()</code></div>
<div class="line number122 index121 alt1"><code class="py plain">plt.tight_layout()</code></div>
<div class="line number123 index122 alt2"><code class="py plain">plt.show()</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<h2>w10</h2>
<p>利用NX軟體進行零件繪製 並將繪製過程recording下來</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hX3q-KhIn6g?si=sFA2K0DpEB_POFBI" title="YouTube video player" width="560"></iframe></p>
<h2>w12-15</h2>
<h1>w17</h1>
<h2>作業一</h2>
<p>繪製球員零件 本次繪製頭 身體以及四肢 皆有將繪製過程路程影片上傳至YOUTUBE</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/SBzVA7nhH4c?si=CTtS6Y6sbP3hfmRI" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/SBzVA7nhH4c?si=qSc3oMJ4aL3oDXdQ">cd2024 協同產品設計實習期末實習評論項目一 頭，學號41023155</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/VstJm_F9ROw?si=3GzI4d1qjIea5w2o" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/VstJm_F9ROw?si=ZglWDSIZm4LUFVM1">cd2024 協同產品設計實習期末實習評論項目一身體，學號41023155</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/WdZrUM5bjPs?si=UhHgwSvSOfra56vk" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/WdZrUM5bjPs?si=ZFGcdvW6CDHsm2rC">cd2024 協同產品設計實習期末實習評論項目手，學號41023155</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hFESnZBk2tw?si=j1zOzVChm5Dc3BSZ" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/hFESnZBk2tw?si=SOfdTDiwwh31_C2T">cd2024 協同產品設計實習期末實習評論項目腳，學號41023155</a></p>
<h2>作業二</h2>
<p>將球員各零件組合完整並拍成影片上傳以方便丟進球場模擬</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/mzi89rHreZc?si=dbOwIIrH07M1qGtb" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/mzi89rHreZc?si=51r48WYEbKYUWpZQ">cd2024 協同產品設計實習期末實習評論項目二組合，學號41023155</a></p>
<h2>作業三</h2>
<p>將繪製好的球員丟到Coppeliasim並下載老師的球場進行模擬 還是有點不熟悉</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-2IJIPaq1hM?si=BPq7VMHn-V0T3DmV" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/-2IJIPaq1hM?si=HPsJDHu--BZ1XH8J">cd2024 協同產品設計實習期末實習評論項目三，學號41023155</a></p>
<p></p>
<p></p>
<h1>Exercise</h1>
<h2>one</h2>
<p><strong><span style="background-color: #cc99ff;">練習1</span>:請各分組製作一個 Web-based 網誌與簡報, 該如何利用隨身碟、 <a href="https://replit.com/">Replit</a> 與 <a href="https://www.google.com/search?q=github+codespaces">Codespaces</a> 中維護個人與分組的網站內容?</strong></p>
<p><strong><span><span style="background-color: #ffff99;">答</span>:</span>每一個倉儲都有&lt;code&gt;，在完成建立組倉儲後有code就可以改版。<br/>任何一個倉儲中都有配置code，codespaces是一個線上整合環境與replit相似，只是介面是另一個配置。在倉儲下可以建一個在主分之來建codespaces。<br/>先啟動動態在功能表還原終端系統，並新增一個終端系統，有兩意思給指令分別啟動動態與靜態。在開始run後要執行python3 main.py，遇到執行時沒有flask模組。就要去chmod u+x init-replit讓程式可以執行，讓他幫其安裝對應模組。最後在./init-replit。網站就會給一個阜可以開啟動態。<br/>要在python3 mhttp.senver 啟動一個模組，因系統帶有一個動態一個靜態，靜態還有一個index，更且有一個index可以啟動，帶進編輯器。index阻礙小輸送快速，約0秒就跳進content跟index，只要用這指令啟用靜態就可以看到更改了，改版會力馬有反應。每一次阜號都是不一樣安全性高。<br/>code每月給定數量相同，編輯可以在介面外，在上傳時開啟就好，使用完後要記得關閉，每月用量平均好就可以一直免費使用。</strong></p>
<h2>two</h2>
<p><span><strong><span style="background-color: #cc99ff;">練習2</span>:</strong></span><strong>請各分組製作一個 Web-based 網誌與簡報, 說明如何在 </strong><strong><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 環境中, 利用 IPv6 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">ZeroMQ Remote API</a> Python 進行兩個自由度的鋼球平衡檯自動控制系統模擬?</strong></p>
<p><span style="background-color: #ffff99;"><strong>答:</strong></span></p>
<p>ZeroMQ遠端API<br/>共分了7種不同的程式語言。</p>
<p>1.Python客戶端<br/>2.C++客戶端</p>
<p><span>  使用C#，您可以使用 NetMQ 這個套件來建立 ZeroMQ 客戶端。您可以使用以下命令來安裝它</span><br/>3.Java客戶端</p>
<p><br/>4.Matlab用戶端<br/>5.Octave用戶端<br/>6.Lua客戶端<br/>7.Rust用戶端</p>
<p>8.Node.js客戶端：</p>
<p>9.Go客戶端：</p>
<p><span>  在 Go 中，您可以使用 </span><code>go-zmq</code><span> 套件來建立客戶端。您可以使用以下命令安裝它</span></p>
<p>10.Swift客戶端：</p>
<p>  在Swift中，您可以使用 <code>SwiftZeroMQ</code> 來建立ZeroMQ客戶端。您可以使用CocoaPods來安裝它</p>
<p>11.Ruby客戶端：</p>
<p>  Ruby的ZeroMQ綁定可通過 <code>ffi-rzmq</code> 這個gem 來獲取。您可以使用以下命令安裝它：</p>
<p></p>
<p>#注意需確保您的資料夾名稱不包含任何空格，並且 CoppeliaSim 正在運行（API 函數從 CoppeliaSim 取得)前面只考慮了 sim 和 simIK 命名空間，您可以根據需要添加更多命名空間#<br/>4.Matlab用戶端:需要捆綁的JeroMQ，如果尚不存在，它會自動安裝<br/>5.Octave用戶端:需要 Octave 6.4+、octave 通訊和 Zeromq 軟體包<br/>6.Lua客戶端:目前，僅在 CoppeliaSim 腳本內支援 Lua 用戶端，也就是支援API用戶端程式碼<br/>7.Rust用戶端: Samuel Cavalcanti 提供</p>
<p>除了安裝所需的套件外，還有一些其他注意事項和補充內容：</p>
<ol>
<li>
<p><strong>適用平台：</strong></p>
<ul>
<li>請確保您的開發平台支援所選擇的語言和相應的套件。有些套件可能對特定操作系統或平台有限制。</li>
</ul>
</li>
<li>
<p><strong>版本相容性：</strong></p>
<ul>
<li>確保所選擇的套件版本與您的開發環境和CoppeliaSim版本相容。有時候，套件的新版本可能不支援舊版本的CoppeliaSim，或者可能需要特定的庫或運行時環境。</li>
</ul>
</li>
<li>
<p><strong>編譯和設定：</strong></p>
<ul>
<li>對於一些語言，您可能需要進行額外的編譯或配置步驟，例如Java中使用Maven進行建構，或者設定環境變數以指示CoppeliaSim的位置。</li>
</ul>
</li>
<li>
<p><strong>文件和範例：</strong></p>
<ul>
<li>在開始使用ZeroMQ遠端API之前，建議閱讀相關的文件和範例程式碼。這些資源可以幫助您更好地了解如何使用API，以及如何將其整合到您的應用程式中。</li>
</ul>
</li>
<li>
<p><strong>錯誤處理和除錯：</strong></p>
<ul>
<li>在開發過程中，可能會遇到各種錯誤和問題。請確保您瞭解如何進行錯誤處理和除錯，以解決可能出現的問題。</li>
</ul>
</li>
<li>
<p><strong>安全性考慮：</strong></p>
<ul>
<li>當建立遠端連接時，請確保您的程式碼具有足夠的安全性措施，以防止潛在的安全漏洞或攻擊。</li>
</ul>
</li>
</ol>
<h2>three</h2>
<p>任務三把球員丟進Coppeliasim模擬影片 第一次嘗試覺得好難</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-2IJIPaq1hM?si=awsUyCdbwxvtggf3" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://youtu.be/-2IJIPaq1hM?si=YbW8CPeQb_5Ziaon"> 向上拉即可跳轉至精確的時間點 0:34 0:02 / 1:10 cd2024 協同產品設計實習期末實習評論項目三，學號41023155</a></p>
<p></p>
<h1>期中前做的進度</h1>
<p><span>1.利用https://github.com/mdecycu/cmsimde_site, 作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁跟目錄</span></p>
<p><br/><span>2.將個人倉儲 import 至 Replit 然後維護</span></p>
<p><br/><span>3.利用 Codespaces 維護倉儲與網站</span></p>
<p><span>4.編輯網誌，網頁</span></p>
<p><span>5.翻譯論文</span><span>分配到的頁數</span></p>
<p><span>6.將指定影片上字幕</span></p>
<p><span>7.製作期中簡報、影片</span></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">SMap</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 網站地圖 - 依序排列網站的所有頁面。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">EditA</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 編輯所有頁面 - 將所有頁面放入編輯模式中，主要用於處理頁面遷移、刪除或決定衝突頁面內容版本。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">編輯</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">-編輯頁面-先選擇要編輯的單一頁面後，再點選編輯，即可進入單一頁面的編輯模式。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">配置</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">- 設定網站 - 編輯頁面標題與管理員密碼。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">搜尋</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">- 動態頁面內容的關鍵字搜尋。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">IUpload</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 圖片檔案上傳 - 圖檔的上傳功能，可以上傳jpg、png和gif文件，其中若在手機上傳圖文件，系統會自動將圖片檔案縮小為800x800大小。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">IList</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 圖片檔案清單 - 上市可以直接在頁面編輯模式中引用的圖片檔案。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">FUpload</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 檔案上傳 - 一般檔案的上傳功能，目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl '、'txt'、'html'、'mp4'等，使用者可以自行修改。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">FList</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 文件清單 - 上市可以直接在頁面編輯模式中引用的上傳文件。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">登出</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">-登出頁面編輯模式。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">轉換</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">- 將動態網站中位於 config/content.htm 文件，透過分頁設定轉為內容目錄中的靜態網頁。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">acp</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - git add、git commit 和 git Push，通常只能在 localhost 或自架主機上網頁表單協助將以太坊改版內容推送到 Github 使用。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">SStatic</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 啟動靜態網站 - 利用Python啟動網站伺服器功能，可以讓使用者檢查轉檔後的靜態網站內容。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">RStatic</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - Replit 靜態網站 URL - 僅用於 Replit 模式，當使用者點擊 SStatic 後，可以點擊 RStatic 進入尚未推向 Github Pages 的靜態網站。</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">80</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - 由 init.py 中 static_port 決定的連結字符串，一般不使用 80，僅在 Replit 中為了與動態網站佔用端口，才特別設為 80。</span></span></p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://replit.com</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用 init_replit 指令安裝所需 Python 模組</span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">chmod u+x init_replit </span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">./init_replit</span></span></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">複製時：</span></span></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.replit：python3 main.py</span></span></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">chmod u+x cms init_replit</span></span></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">./init_replit</span></span></p>
<p dir="auto" style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">對於 cmsimde_site （不需要）： git submodule update --init --recursive</span></span></p>
<p dir="auto" style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">對於 cmsimde：pip installflaskflask_corsbs4lxmlpelicanmarkdowngevent</span></span></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">密碼產生器：  </span></span><a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://mde.tw/cmsite/content/Brython.html ?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3485858500000m Python</span></span></a> </p>
<p dir="auto"></p>
<p dir="auto"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">僅適用於 IPv6 Ubuntu：</span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.ssh 目錄中的配置，將 SSH 會話名稱設為 github.com：</span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主機 github.com</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用者 git</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主機名稱 github.com </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">ProxyCommand /usr/bin/ncat --proxy p4.cycu.org: 3128 - -proxy-type http %h %p </span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">for Replit: </span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.ssh 目錄中的配置，將 SSH 會話名稱設為 github.com:</span></span><br/><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主機 github.com</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">用戶 git</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主機名 github.co </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">#since Replit 適用於IPv4，因此沒有ProxyCommand 設定需要</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</span></span></p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://en.wikipedia.org/wiki/Python_（程式語言）</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">例子：</span></span></h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.geeksforgeeks.org/python-programming-examples/</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.programiz.com/python-programming/examples</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python教學：</span></span></h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://docs.python.org/3/tutorial/</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 的非正式介紹</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">縮排（Python 採用 4 個 Spaces 縮排，以介面執行範圍）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">變數（</span></span><a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 關鍵字</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">註（#單行註解、三單標註或三雙標註標註多行註解）</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">數</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(整數 int(), 浮點數 float())</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字串</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">（字符串）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print (Python 內建函數, </span></span><a href="https://docs.python.org/3/library/functions.html#print"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print()</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">函式)</span></span></h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python是控制流程工具</span></span></a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">為了</span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如果</span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">範圍</span></span></a></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">打開</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">讀</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清單</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">元組</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字典</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">功能</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">嘗試...除了</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">休息</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">經過</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></a></h4>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">此頁面示範如何在同一頁面下納入多個線上Ace編輯器與執行按鈕（</span></span><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">practice_html.txt</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案）。</span></span></p>
<p><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice_html.txt</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案應該可以在啟動 Brython 時，設定會將 .py 檔案放入 downloads/py 目錄中引用。</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">也即將所有對應的 html 也使用 Brython 產生，然後編寫為</span></span><a href="https://docs.python.org/3/tutorial/classes.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">後，在範例匯入時透過</span></span><a href="https://docs.python.org/3/tutorial/classes.html#instance-objects"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">實例</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">引用。</span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">&lt;!-- 啟動 Brython --&gt;</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;腳本&gt;</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
視窗.onload=函數(){</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
}</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;/腳本&gt;</span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100：</span></span></p>
<p><button id="add1to100"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將 iterable 與 iterator</span></span><a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">相關說明</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，利用 Brython 與 Ace Editor 整理在此頁面。</span></span></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100第2部分：</span></span></p>
<p><button id="add1to100part2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button><button id="cango_three_gears"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cango_三_齒輪</span></span></button><button id="bsnake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">BS蛇</span></span></button><button id="aitetris"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">人工智慧俄羅斯方塊</span></span></button><button id="threejsblock"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">旋轉塊</span></span></button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename2" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>